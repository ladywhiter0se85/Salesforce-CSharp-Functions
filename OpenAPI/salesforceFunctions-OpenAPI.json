{
    "openapi": "3.0.1",
    "info": {
        "title": "Salesforce Function App",
        "description": "Salesforce API Function App",
        "version": "V3"
    },
    "servers": [
        {
            "url": "http://localhost:7071/api"
        }
    ],
    "paths": {
        "/accounts": {
            "get": {
                "summary": "Retrieve a list of Salesforce Accounts",
                "description": "Retrieves all available Salesforce accounts with basic details.",
                "operationId": "GetAccounts",
                "responses": {
                    "200": {
                        "description": "Successful response with list of Salesforce Accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/account"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountOne\"},\"id\":\"mockedAccountOneId\",\"name\":\"Mocked Account One\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"312 Constitution Place\\nAustin, TX 78767\\nUSA\",\"city\":\"Austin\",\"state\":\"TX\",\"country\":\"United States\",\"stateCode\":\"TX\",\"countryCode\":\"US\"},\"phone\":\"(512) 757-6000\",\"description\":\"Description for Mocked Account One.\",\"active__c\":\"Yes\"},{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountTwo\"},\"id\":\"mockedAccountTwoId\",\"name\":\"Mocked Account Two\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\"}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Salesforce Accounts",
                "description": "Creates Salesforce accounts.",
                "operationId": "PostAccounts",
                "requestBody": {
                    "description": "List of Account objects to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/account"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountOne\"},\"id\":\"mockedAccountOneId\",\"name\":\"Mocked Account One\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"312 Constitution Place\\nAustin, TX 78767\\nUSA\",\"city\":\"Austin\",\"state\":\"TX\",\"country\":\"United States\",\"stateCode\":\"TX\",\"countryCode\":\"US\"},\"phone\":\"(512) 757-6000\",\"description\":\"Description for Mocked Account One.\",\"active__c\":\"Yes\"},{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountTwo\"},\"id\":\"mockedAccountTwoId\",\"name\":\"Mocked Account Two\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Updates Salesforce Accounts",
                "description": "Updates Salesforce accounts.",
                "operationId": "PatchAccounts",
                "requestBody": {
                    "description": "List of Account objects to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/account"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountOne\"},\"id\":\"mockedAccountOneId\",\"name\":\"Mocked Account One\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"312 Constitution Place\\nAustin, TX 78767\\nUSA\",\"city\":\"Austin\",\"state\":\"TX\",\"country\":\"United States\",\"stateCode\":\"TX\",\"countryCode\":\"US\"},\"phone\":\"(512) 757-6000\",\"description\":\"Description for Mocked Account One.\",\"active__c\":\"Yes\"},{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountTwo\"},\"id\":\"mockedAccountTwoId\",\"name\":\"Mocked Account Two\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/id/{accountId}": {
            "get": {
                "summary": "Retrieve a Salesforce Account by Id",
                "description": "Retrieves a Salesforce account by id with basic details.",
                "operationId": "GetAccountById",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Salesforce Account Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with a Salesforce Account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/account"
                                },
                                "examples": {
                                    "default": {
                                        "value": "{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountOne\"},\"id\":\"mockedAccountOneId\",\"name\":\"Mocked Account One\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"312 Constitution Place\\nAustin, TX 78767\\nUSA\",\"city\":\"Austin\",\"state\":\"TX\",\"country\":\"United States\",\"stateCode\":\"TX\",\"countryCode\":\"US\"},\"phone\":\"(512) 757-6000\",\"description\":\"Description for Mocked Account One.\",\"active__c\":\"Yes\"}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/filter/{where}": {
            "get": {
                "summary": "Retrieve a Salesforce Accounts by Filter",
                "description": "Retrieves Salesforce accounts by filter with basic details.",
                "operationId": "GetAccountsByFilter",
                "parameters": [
                    {
                        "name": "where",
                        "in": "path",
                        "description": "Where Condition Filters",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isAnd",
                        "in": "query",
                        "description": "Type of Condition Check AND/OR",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with list of Salesforce Accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/account"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountOne\"},\"id\":\"mockedAccountOneId\",\"name\":\"Mocked Account One\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"312 Constitution Place\\nAustin, TX 78767\\nUSA\",\"city\":\"Austin\",\"state\":\"TX\",\"country\":\"United States\",\"stateCode\":\"TX\",\"countryCode\":\"US\"},\"phone\":\"(512) 757-6000\",\"description\":\"Description for Mocked Account One.\",\"active__c\":\"Yes\"},{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountTwo\"},\"id\":\"mockedAccountTwoId\",\"name\":\"Mocked Account Two\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\"}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/external/{externalField}": {
            "put": {
                "summary": "Upsert Salesforce Accounts",
                "description": "Upsert Salesforce accounts.",
                "operationId": "PutAccounts",
                "parameters": [
                    {
                        "name": "externalField",
                        "in": "path",
                        "description": "Salesforce External field used for upsert.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of Account objects to upsert",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/account"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountOne\"},\"id\":\"mockedAccountOneId\",\"name\":\"Mocked Account One\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"312 Constitution Place\\nAustin, TX 78767\\nUSA\",\"city\":\"Austin\",\"state\":\"TX\",\"country\":\"United States\",\"stateCode\":\"TX\",\"countryCode\":\"US\"},\"phone\":\"(512) 757-6000\",\"description\":\"Description for Mocked Account One.\",\"active__c\":\"Yes\"},{\"attributes\":{\"type\":\"Account\",\"url\":\"mockedURLAccountTwo\"},\"id\":\"mockedAccountTwoId\",\"name\":\"Mocked Account Two\",\"type\":\"Customer - Direct\",\"billingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "summary": "Retrieve a list of Salesforce Contacts",
                "description": "Retrieves all available Salesforce contacts with basic details.",
                "operationId": "GetContacts",
                "responses": {
                    "200": {
                        "description": "Successful response with list of Salesforce Contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/contact"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdOne\",\"accountId\":\"mockedAccountIdOne\",\"lastName\":\"Contact One\",\"firstName\":\"Mocked\",\"salutation\":\"Mr.\",\"name\":\"Mocked Contact One\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\",\"email\":\"mockedContactOne@email.com\",\"description\":\"Mocked Contact One Desc\"},{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"lastName\":\"Contact Two\",\"firstName\":\"Mocked\",\"salutation\":\"Ms.\",\"name\":\"Mocked Contact Two\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"2 Place Jussieu\",\"city\":\"Paris\",\"postalCode\":\"75251\",\"country\":\"France\",\"countryCode\":\"FR\"},\"phone\":\"(014) 427-4427\",\"email\":\"mockedContactTwo@email.com\",\"description\":\"Mocked Contact Two Desc\"}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Salesforce Contacts",
                "description": "Creates Salesforce contacts.",
                "operationId": "PostContacts",
                "requestBody": {
                    "description": "List of Contact objects to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/contact"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdOne\",\"accountId\":\"mockedAccountIdOne\",\"lastName\":\"Contact One\",\"firstName\":\"Mocked\",\"salutation\":\"Mr.\",\"name\":\"Mocked Contact One\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\",\"email\":\"mockedContactOne@email.com\",\"description\":\"Mocked Contact One Desc\"},{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"lastName\":\"Contact Two\",\"firstName\":\"Mocked\",\"salutation\":\"Ms.\",\"name\":\"Mocked Contact Two\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"2 Place Jussieu\",\"city\":\"Paris\",\"postalCode\":\"75251\",\"country\":\"France\",\"countryCode\":\"FR\"},\"phone\":\"(014) 427-4427\",\"email\":\"mockedContactTwo@email.com\",\"description\":\"Mocked Contact Two Desc\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Updates Salesforce Contacts",
                "description": "Updates Salesforce contacts.",
                "operationId": "PatchContacts",
                "requestBody": {
                    "description": "List of Contact objects to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/contact"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdOne\",\"accountId\":\"mockedAccountIdOne\",\"lastName\":\"Contact One\",\"firstName\":\"Mocked\",\"salutation\":\"Mr.\",\"name\":\"Mocked Contact One\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\",\"email\":\"mockedContactOne@email.com\",\"description\":\"Mocked Contact One Desc\"},{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"lastName\":\"Contact Two\",\"firstName\":\"Mocked\",\"salutation\":\"Ms.\",\"name\":\"Mocked Contact Two\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"2 Place Jussieu\",\"city\":\"Paris\",\"postalCode\":\"75251\",\"country\":\"France\",\"countryCode\":\"FR\"},\"phone\":\"(014) 427-4427\",\"email\":\"mockedContactTwo@email.com\",\"description\":\"Mocked Contact Two Desc\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts/id/{contactId}": {
            "get": {
                "summary": "Retrieve a Salesforce Contact by Id",
                "description": "Retrieves a Salesforce contact by id with basic details.",
                "operationId": "GetContactById",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Salesforce Contact Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with a Salesforce Contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contact"
                                },
                                "examples": {
                                    "default": {
                                        "value": "{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdOne\",\"accountId\":\"mockedAccountIdOne\",\"lastName\":\"Contact One\",\"firstName\":\"Mocked\",\"salutation\":\"Mr.\",\"name\":\"Mocked Contact One\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\",\"email\":\"mockedContactOne@email.com\",\"description\":\"Mocked Contact One Desc\"}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts/filter/{where}": {
            "get": {
                "summary": "Retrieve a Salesforce Contacts by Filter",
                "description": "Retrieves Salesforce contacts by filter with basic details.",
                "operationId": "GetContactsByFilter",
                "parameters": [
                    {
                        "name": "where",
                        "in": "path",
                        "description": "Where Condition Filters",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isAnd",
                        "in": "query",
                        "description": "Type of Condition Check AND/OR",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with list of Salesforce Contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/contact"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdOne\",\"accountId\":\"mockedAccountIdOne\",\"lastName\":\"Contact One\",\"firstName\":\"Mocked\",\"salutation\":\"Mr.\",\"name\":\"Mocked Contact One\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\",\"email\":\"mockedContactOne@email.com\",\"description\":\"Mocked Contact One Desc\"},{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"lastName\":\"Contact Two\",\"firstName\":\"Mocked\",\"salutation\":\"Ms.\",\"name\":\"Mocked Contact Two\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"2 Place Jussieu\",\"city\":\"Paris\",\"postalCode\":\"75251\",\"country\":\"France\",\"countryCode\":\"FR\"},\"phone\":\"(014) 427-4427\",\"email\":\"mockedContactTwo@email.com\",\"description\":\"Mocked Contact Two Desc\"}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts/external/{externalField}": {
            "put": {
                "summary": "Upsert Salesforce Contacts",
                "description": "Upsert Salesforce contacts.",
                "operationId": "PutContacts",
                "parameters": [
                    {
                        "name": "externalField",
                        "in": "path",
                        "description": "Salesforce External field used for upsert.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of Contact objects to upsert",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/contact"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdOne\",\"accountId\":\"mockedAccountIdOne\",\"lastName\":\"Contact One\",\"firstName\":\"Mocked\",\"salutation\":\"Mr.\",\"name\":\"Mocked Contact One\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"525 S. Lexington Ave\",\"city\":\"Burlington\",\"state\":\"NC\",\"postalCode\":\"27215\",\"country\":\"USA\",\"stateCode\":\"NC\",\"countryCode\":\"US\"},\"phone\":\"(336) 222-7000\",\"email\":\"mockedContactOne@email.com\",\"description\":\"Mocked Contact One Desc\"},{\"attributes\":{\"type\":\"Contact\"},\"id\":\"mockedContactIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"lastName\":\"Contact Two\",\"firstName\":\"Mocked\",\"salutation\":\"Ms.\",\"name\":\"Mocked Contact Two\",\"mailingAddress\":{\"attributes\":{\"type\":\"Address\"},\"street\":\"2 Place Jussieu\",\"city\":\"Paris\",\"postalCode\":\"75251\",\"country\":\"France\",\"countryCode\":\"FR\"},\"phone\":\"(014) 427-4427\",\"email\":\"mockedContactTwo@email.com\",\"description\":\"Mocked Contact Two Desc\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunities": {
            "get": {
                "summary": "Retrieve a list of Salesforce Opportunities",
                "description": "Retrieves all available Salesforce opportunities with basic details.",
                "operationId": "GetOpportunities",
                "responses": {
                    "200": {
                        "description": "Successful response with list of Salesforce Opportunities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/opportunity"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdOne\",\"accountId\":\"mockedAccountIdOne\",\"name\":\"Mocked Opportunity One\",\"description\":\"Description for Mocked Opportunity One.\",\"stageName\":\"Qualification\",\"amount\":15000.0,\"totalOpportunityQuantity\":2.0,\"closeDate\":\"2025-02-01T00:00:00\",\"type\":\"New Customer\"},{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"name\":\"Mocked Opportunity Two\",\"description\":\"Description for Mocked Opportunity Two.\",\"stageName\":\"Negotiation/Review\",\"amount\":125000.0,\"totalOpportunityQuantity\":1.0,\"closeDate\":\"2025-01-20T00:00:00\",\"type\":\"Existing Customer - Upgrade\"}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Salesforce Opportunities",
                "description": "Creates Salesforce opportunities.",
                "operationId": "PostOpportunities",
                "requestBody": {
                    "description": "List of Opportunity objects to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdOne\",\"accountId\":\"mockedAccountIdOne\",\"name\":\"Mocked Opportunity One\",\"description\":\"Description for Mocked Opportunity One.\",\"stageName\":\"Qualification\",\"amount\":15000.0,\"totalOpportunityQuantity\":2.0,\"closeDate\":\"2025-02-01T00:00:00\",\"type\":\"New Customer\"},{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"name\":\"Mocked Opportunity Two\",\"description\":\"Description for Mocked Opportunity Two.\",\"stageName\":\"Negotiation/Review\",\"amount\":125000.0,\"totalOpportunityQuantity\":1.0,\"closeDate\":\"2025-01-20T00:00:00\",\"type\":\"Existing Customer - Upgrade\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Updates Salesforce Opportunities",
                "description": "Updates Salesforce opportunities.",
                "operationId": "PatchOpportunities",
                "requestBody": {
                    "description": "List of Opportunity objects to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdOne\",\"accountId\":\"mockedAccountIdOne\",\"name\":\"Mocked Opportunity One\",\"description\":\"Description for Mocked Opportunity One.\",\"stageName\":\"Qualification\",\"amount\":15000.0,\"totalOpportunityQuantity\":2.0,\"closeDate\":\"2025-02-01T00:00:00\",\"type\":\"New Customer\"},{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"name\":\"Mocked Opportunity Two\",\"description\":\"Description for Mocked Opportunity Two.\",\"stageName\":\"Negotiation/Review\",\"amount\":125000.0,\"totalOpportunityQuantity\":1.0,\"closeDate\":\"2025-01-20T00:00:00\",\"type\":\"Existing Customer - Upgrade\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunities/id/{opportunityId}": {
            "get": {
                "summary": "Retrieve a Salesforce Opportunity by Id",
                "description": "Retrieves a Salesforce opportunity by id with basic details.",
                "operationId": "GetOpportunityById",
                "parameters": [
                    {
                        "name": "opportunityId",
                        "in": "path",
                        "description": "Salesforce Opportunity Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with a Salesforce Opportunity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/opportunity"
                                },
                                "examples": {
                                    "default": {
                                        "value": "{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdOne\",\"accountId\":\"mockedAccountIdOne\",\"name\":\"Mocked Opportunity One\",\"description\":\"Description for Mocked Opportunity One.\",\"stageName\":\"Qualification\",\"amount\":15000.0,\"totalOpportunityQuantity\":2.0,\"closeDate\":\"2025-02-01T00:00:00\",\"type\":\"New Customer\"}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunities/filter/{where}": {
            "get": {
                "summary": "Retrieve a Salesforce Opportunities by Filter",
                "description": "Retrieves Salesforce opportunities by filter with basic details.",
                "operationId": "GetOpportunitiesByFilter",
                "parameters": [
                    {
                        "name": "where",
                        "in": "path",
                        "description": "Where Condition Filters",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isAnd",
                        "in": "query",
                        "description": "Type of Condition Check AND/OR",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with list of Salesforce Opportunities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/opportunity"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdOne\",\"accountId\":\"mockedAccountIdOne\",\"name\":\"Mocked Opportunity One\",\"description\":\"Description for Mocked Opportunity One.\",\"stageName\":\"Qualification\",\"amount\":15000.0,\"totalOpportunityQuantity\":2.0,\"closeDate\":\"2025-02-01T00:00:00\",\"type\":\"New Customer\"},{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"name\":\"Mocked Opportunity Two\",\"description\":\"Description for Mocked Opportunity Two.\",\"stageName\":\"Negotiation/Review\",\"amount\":125000.0,\"totalOpportunityQuantity\":1.0,\"closeDate\":\"2025-01-20T00:00:00\",\"type\":\"Existing Customer - Upgrade\"}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunities/external/{externalField}": {
            "put": {
                "summary": "Upsert Salesforce Opportunities",
                "description": "Upsert Salesforce opportunities.",
                "operationId": "PutOpportunities",
                "parameters": [
                    {
                        "name": "externalField",
                        "in": "path",
                        "description": "Salesforce External field used for upsert.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of Opportunity objects to upsert",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            },
                            "examples": {
                                "default": {
                                    "value": "[{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdOne\",\"accountId\":\"mockedAccountIdOne\",\"name\":\"Mocked Opportunity One\",\"description\":\"Description for Mocked Opportunity One.\",\"stageName\":\"Qualification\",\"amount\":15000.0,\"totalOpportunityQuantity\":2.0,\"closeDate\":\"2025-02-01T00:00:00\",\"type\":\"New Customer\"},{\"attributes\":{\"type\":\"Opportunity\"},\"id\":\"mockedOpportunityIdTwo\",\"accountId\":\"mockedAccountIdTwo\",\"name\":\"Mocked Opportunity Two\",\"description\":\"Description for Mocked Opportunity Two.\",\"stageName\":\"Negotiation/Review\",\"amount\":125000.0,\"totalOpportunityQuantity\":1.0,\"closeDate\":\"2025-01-20T00:00:00\",\"type\":\"Existing Customer - Upgrade\"}]"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response with Operation Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/operationResponse"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "value": "[{\"id\":\"mockedSObjectId\",\"success\":true}]"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or request format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "account": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/attributes"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "billingStreet": {
                        "type": "string"
                    },
                    "billingCity": {
                        "type": "string"
                    },
                    "billingState": {
                        "type": "string"
                    },
                    "billingPostalCode": {
                        "type": "string"
                    },
                    "billingCountry": {
                        "type": "string"
                    },
                    "billingStateCode": {
                        "type": "string"
                    },
                    "billingCountryCode": {
                        "type": "string"
                    },
                    "billingLatitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "billingLongitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "billingGeocodeAccuracy": {
                        "type": "string"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "shippingStreet": {
                        "type": "string"
                    },
                    "shippingCity": {
                        "type": "string"
                    },
                    "shippingState": {
                        "type": "string"
                    },
                    "shippingPostalCode": {
                        "type": "string"
                    },
                    "shippingCountry": {
                        "type": "string"
                    },
                    "shippingStateCode": {
                        "type": "string"
                    },
                    "shippingCountryCode": {
                        "type": "string"
                    },
                    "shippingLatitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "shippingLongitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "shippingGeocodeAccuracy": {
                        "type": "string"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "photoUrl": {
                        "type": "string"
                    },
                    "sic": {
                        "type": "string"
                    },
                    "industry": {
                        "type": "string"
                    },
                    "annualRevenue": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "numberOfEmployees": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "ownership": {
                        "type": "string"
                    },
                    "tickerSymbol": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "string"
                    },
                    "site": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "object"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "object"
                    },
                    "lastModifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastModifiedById": {
                        "type": "object"
                    },
                    "systemModstamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastActivityDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastViewedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastReferencedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "jigsaw": {
                        "type": "string"
                    },
                    "jigsawCompanyId": {
                        "type": "string"
                    },
                    "cleanStatus": {
                        "type": "string"
                    },
                    "accountSource": {
                        "type": "string"
                    },
                    "dunsNumber": {
                        "type": "string"
                    },
                    "tradestyle": {
                        "type": "string"
                    },
                    "naicsCode": {
                        "type": "string"
                    },
                    "naicsDesc": {
                        "type": "string"
                    },
                    "yearStarted": {
                        "type": "string"
                    },
                    "sicDesc": {
                        "type": "string"
                    },
                    "dandbCompanyId": {
                        "type": "object"
                    },
                    "operatingHoursId": {
                        "type": "object"
                    },
                    "customerPriority__c": {
                        "type": "string"
                    },
                    "slA__c": {
                        "type": "string"
                    },
                    "active__c": {
                        "type": "string"
                    },
                    "numberofLocations__c": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "upsellOpportunity__c": {
                        "type": "string"
                    },
                    "slaSerialNumber__c": {
                        "type": "string"
                    },
                    "slaExpirationDate__c": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "masterRecordId": {
                        "$ref": "#/components/schemas/account"
                    },
                    "parentId": {
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "address": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/attributes"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "object"
                    },
                    "lastModifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastModifiedById": {
                        "type": "object"
                    },
                    "systemModstamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "parentId": {
                        "type": "object"
                    },
                    "locationType": {
                        "type": "string"
                    },
                    "addressType": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "stateCode": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "geocodeAccuracy": {
                        "type": "string"
                    },
                    "Address": {
                        "type": "object",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "drivingDirections": {
                        "type": "string"
                    },
                    "timeZone": {
                        "type": "string"
                    }
                }
            },
            "attributes": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "contact": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/attributes"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "accountId": {
                        "type": "object"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "salutation": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "otherStreet": {
                        "type": "string"
                    },
                    "otherCity": {
                        "type": "string"
                    },
                    "otherState": {
                        "type": "string"
                    },
                    "otherPostalCode": {
                        "type": "string"
                    },
                    "otherCountry": {
                        "type": "string"
                    },
                    "otherStateCode": {
                        "type": "string"
                    },
                    "otherCountryCode": {
                        "type": "string"
                    },
                    "otherLatitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "otherLongitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "otherGeocodeAccuracy": {
                        "type": "string"
                    },
                    "otherAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "mailingStreet": {
                        "type": "string"
                    },
                    "mailingCity": {
                        "type": "string"
                    },
                    "mailingState": {
                        "type": "string"
                    },
                    "mailingPostalCode": {
                        "type": "string"
                    },
                    "mailingCountry": {
                        "type": "string"
                    },
                    "mailingStateCode": {
                        "type": "string"
                    },
                    "mailingCountryCode": {
                        "type": "string"
                    },
                    "mailingLatitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "mailingLongitude": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "mailingGeocodeAccuracy": {
                        "type": "string"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "mobilePhone": {
                        "type": "string"
                    },
                    "homePhone": {
                        "type": "string"
                    },
                    "otherPhone": {
                        "type": "string"
                    },
                    "assistantPhone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "department": {
                        "type": "string"
                    },
                    "assistantName": {
                        "type": "string"
                    },
                    "leadSource": {
                        "type": "string"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "object"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "object"
                    },
                    "lastModifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastModifiedById": {
                        "type": "object"
                    },
                    "systemModstamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastActivityDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastCURequestDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastCUUpdateDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastViewedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastReferencedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "emailBouncedReason": {
                        "type": "string"
                    },
                    "emailBouncedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isEmailBounced": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "photoUrl": {
                        "type": "string"
                    },
                    "jigsaw": {
                        "type": "string"
                    },
                    "jigsawContactId": {
                        "type": "string"
                    },
                    "cleanStatus": {
                        "type": "string"
                    },
                    "individualId": {
                        "type": "object"
                    },
                    "level__c": {
                        "type": "string"
                    },
                    "languages__c": {
                        "type": "string"
                    },
                    "masterRecordId": {
                        "$ref": "#/components/schemas/contact"
                    },
                    "reportsToId": {
                        "$ref": "#/components/schemas/contact"
                    }
                }
            },
            "operationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "created": {
                        "type": "boolean"
                    }
                }
            },
            "opportunity": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/attributes"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "isPrivate": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "stageName": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "probability": {
                        "type": "object"
                    },
                    "expectedRevenue": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "totalOpportunityQuantity": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "closeDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "nextStep": {
                        "type": "string"
                    },
                    "leadSource": {
                        "type": "string"
                    },
                    "isClosed": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isWon": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "forecastCategory": {
                        "type": "string"
                    },
                    "forecastCategoryName": {
                        "type": "string"
                    },
                    "campaignId": {
                        "type": "object"
                    },
                    "hasOpportunityLineItem": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "pricebook2Id": {
                        "type": "object"
                    },
                    "ownerId": {
                        "type": "object"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "object"
                    },
                    "lastModifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastModifiedById": {
                        "type": "object"
                    },
                    "systemModstamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastActivityDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "pushCount": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "lastStageChangeDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "fiscalQuarter": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "fiscalYear": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "fiscal": {
                        "type": "string"
                    },
                    "contactId": {
                        "type": "object"
                    },
                    "lastViewedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastReferencedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "hasOpenActivity": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "hasOverdueTask": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "lastAmountChangedHistoryId": {
                        "type": "object"
                    },
                    "lastCloseDateChangedHistoryId": {
                        "type": "object"
                    },
                    "deliveryInstallationStatus__c": {
                        "type": "string"
                    },
                    "trackingNumber__c": {
                        "type": "string"
                    },
                    "orderNumber__c": {
                        "type": "string"
                    },
                    "currentGenerators__c": {
                        "type": "string"
                    },
                    "mainCompetitors__c": {
                        "type": "string"
                    }
                }
            }
        }
    }
}